#                   _   _ _    _            _ _   _     _____           _ _           _
#       /\         | | (_) |  | |          | | | | |   |_   _|         | (_)         | |
#      /  \   _ __ | |_ _| |__| | ___  __ _| | |_| |__   | |  _ __   __| |_  ___ __ _| |_ ___  _ __
#     / /\ \ | '_ \| __| |  __  |/ _ \/ _` | | __| '_ \  | | | '_ \ / _` | |/ __/ _` | __/ _ \| '__|
#    / ____ \| | | | |_| | |  | |  __/ (_| | | |_| | | |_| |_| | | | (_| | | (_| (_| | || (_) | |
#   /_/    \_\_| |_|\__|_|_|  |_|\___|\__,_|_|\__|_| |_|_____|_| |_|\__,_|_|\___\__,_|\__\___/|_|
#

[debug]
# If enabled, the plugin will print debug messages to players with the permission "AntiHealthIndicator.Debug".
enabled = false

# This option determines whether the plugin will check for an update on startup.
[update-checker]
enabled = true

# When an update is found, should it be printed to the console?
print-to-console = true

# When an update is found, should players with the permission "AntiHealthIndicator.Notify" be notified?
notify-in-game = true

# If enabled, players with the permission "AntiHealthIndicator.Bypass" will not be affected by the spoofing.
[allow-bypass]
enabled = false

# Sets the seed which is being sent to the client to zero.
# Keep in mind that this doesn't make it impossible to predict the world seed, it just makes it more difficult.
[spoof.world-seed]
enabled = false

# Prevents the player from receiving the current saturation of their food bar,
# which can be used by mods or cheats to determine when the food bar itself will be drained.
[spoof.food-saturation]
enabled = true

# These options determine what entity data should be spoofed.
[spoof.entity-data]
# If disabled, none of the following settings will have any effect.
enabled = true

  # If enabled, metadata (like health, absorption, etc.) will only be hidden for other players.
  # Entities other than players are ignored (like mobs, animals, etc.).
  # This will result in a much smaller cache size, but it will only work for players.
  # Caching shouldn't really be a performance concern, but if you want to save some memory, you can enable this.
  # When enabled, the ignored vehicles, wolves and iron golems settings will have no effect.
  [spoof.entity-data.players-only]
  enabled = false

  # If enabled, hides the oxygen number of other entities.
  [spoof.entity-data.air-ticks]
  enabled = true

  # If enabled, masks the health of other entities. Other players cannot see these entities' health.
  [spoof.entity-data.health]
  enabled = true

    # If enabled, it will allow the person on the vehicle to see the actual health of the vehicle.
    # For example, if a player is riding a horse, the player will see the horse's health.
    ignore-vehicles = true

    # If enabled, the health of wolves will be ignored while spoofing health, since the client will render the position
    # of the tail depending on the health of the wolf.
    [spoof.entity-data.health.ignore-wolves]
    # If disabled, none of the following settings will have any effect.
    enabled = true

      # Only set one of the following options to true, otherwise only tamed wolves will be ignored.
      # If both are false, all wolves will be ignored, which means the client will render the correct tail positions
      # of all wolves, including wild wolves.
      [spoof.entity-data.health.ignore-wolves.when]

      # If enabled, only the health of tamed wolves will be ignored.
      # This means players will see the correct tail positions of tamed wolves, but not of wild wolves.
      for-tamed-wolves = false

      # If enabled, only the health of owned wolves will be ignored.
      # This means only the player who owns the wolf sees the correct tail positions of his wolf
      for-owned-wolves = true

    # Ignoring iron golem health while spoofing allows for proper visual rendering.
    # From version 1.15, iron golem textures are based on its health.
    # (Refer: https://minecraft.fandom.com/wiki/Iron_Golem#Cracking)
    [spoof.entity-data.health.ignore-iron-golems]
    enabled = true

    # Gradual health spoofing provides a seamless transition between different iron golem health textures.
    # It will always show the highest possible health for the current texture based on the health of the iron golem.
    # This will make it impossible for other players to determine the exact health of the iron golem
    # until it reaches the next health texture, which is vanilla behavior.
    # This setting will only have effect from version 1.15 and above.
    [spoof.entity-data.health.ignore-iron-golems.gradual]
    enabled = true

  # If enabled, hides the absorption of other players.
  [spoof.entity-data.absorption]
  enabled = true

  # if enabled, hides the amount of experience of other players.
  [spoof.entity-data.xp]
  enabled = true

  # If enabled, hides certain information about other players their held or wearing items.
  [spoof.entity-data.items]
  enabled = true

    # If enabled, hides the number of items in a stack the player is holding.
    # For example, if a player holds a block, it won't show the number of blocks in the stack
    [spoof.entity-data.items.stack-amount]
    enabled = true

    # If enabled, hides the durability of other players items (e.g., tools, armor).
    [spoof.entity-data.items.durability]
    enabled = true

    # If enabled, hides the enchantments of other players items (e.g., tools, armor).
    # For example, if a player holds a sword with sharpness 5, it won't show the sharpness enchantment.
    # But rather Luck of the Sea I, which is not true, but we need to apply at least one enchantment
    # client-side, otherwise the client will render the item as if not enchanted.
    [spoof.entity-data.items.enchantments]
    enabled = true
